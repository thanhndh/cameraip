<?xml version="1.0" encoding="utf-8" ?>
<!--
========================================================================
   Copyright (c) 2017 Qualcomm Technologies, Inc.
   All Rights Reserved.
   Confidential and Proprietary - Qualcomm Technologies, Inc.
========================================================================
-->
<chromatixPDLib
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="..\..\..\XSD\stats\af\afpdlibelements.xsd">
  <module_version major_revision="3" minor_revision="4"/>
  <parameter_version major_revision="0" minor_revision="0"/>
  <preProcess>
    <sparseProcessingMode>SPARSE_PD_PROC_SIMPLE</sparseProcessingMode>
    <HDR>
      <channelSelection>DPD_HDR_AUTO_MODE</channelSelection>
      <longThreshold type="int" range="[0,2]">450</longThreshold>
    </HDR>
    <boxFilterLength type="int" range="[1,8]">2</boxFilterLength>
    <antiAliasFilterThreshold type="int" range="[80,120]">100</antiAliasFilterThreshold>
    <filterTrigger>
      <filterSet>
        <AECTrigger>
          <lux_idx_start>0</lux_idx_start>
          <lux_idx_end>0</lux_idx_end>
          <gain_start>8</gain_start>
          <gain_end>8</gain_end>
        </AECTrigger>
        <verticalMode type="int" range="[1,32]">8</verticalMode>
        <horizontalMode type="int" range="[1,8]">1</horizontalMode>
        <boxFilterLength type="int" range="[1,8]">2</boxFilterLength>
        <antiAliasFilterThreshold type="int" range="[80,120]">100</antiAliasFilterThreshold>
      </filterSet>
      <filterSet>
        <AECTrigger>
          <lux_idx_start>0</lux_idx_start>
          <lux_idx_end>0</lux_idx_end>
          <gain_start>4</gain_start>
          <gain_end>4</gain_end>
        </AECTrigger>
        <verticalMode type="int" range="[1,32]">4</verticalMode>
        <horizontalMode type="int" range="[1,8]">1</horizontalMode>
        <boxFilterLength type="int" range="[1,8]">2</boxFilterLength>
        <antiAliasFilterThreshold type="int" range="[80,120]">100</antiAliasFilterThreshold>
      </filterSet>
      <filterSet>
        <AECTrigger>
          <lux_idx_start>0</lux_idx_start>
          <lux_idx_end>0</lux_idx_end>
          <gain_start>1</gain_start>
          <gain_end>1</gain_end>
        </AECTrigger>
        <verticalMode type="int" range="[1,32]">4</verticalMode>
        <horizontalMode type="int" range="[1,8]">1</horizontalMode>
        <boxFilterLength type="int" range="[1,8]">2</boxFilterLength>
        <antiAliasFilterThreshold type="int" range="[80,120]">100</antiAliasFilterThreshold>
      </filterSet>
    </filterTrigger>
    <lcrFilterTrigger>
      <filterSet>
        <AECTrigger>
          <lux_idx_start>0</lux_idx_start>
          <lux_idx_end>0</lux_idx_end>
          <gain_start>8</gain_start>
          <gain_end>8</gain_end>
        </AECTrigger>
        <verticalMode type="int" range="[1,32]">1</verticalMode>
        <horizontalMode type="int" range="[1,8]">2</horizontalMode>
        <boxFilterLength type="int" range="[1,8]">0</boxFilterLength>
        <antiAliasFilterThreshold type="int" range="[80,120]">0</antiAliasFilterThreshold>
      </filterSet>
      <filterSet>
        <AECTrigger>
          <lux_idx_start>0</lux_idx_start>
          <lux_idx_end>0</lux_idx_end>
          <gain_start>4</gain_start>
          <gain_end>4</gain_end>
        </AECTrigger>
        <verticalMode type="int" range="[1,32]">1</verticalMode>
        <horizontalMode type="int" range="[1,8]">2</horizontalMode>
        <boxFilterLength type="int" range="[1,8]">0</boxFilterLength>
        <antiAliasFilterThreshold type="int" range="[80,120]">0</antiAliasFilterThreshold>
      </filterSet>
      <filterSet>
        <AECTrigger>
          <lux_idx_start>0</lux_idx_start>
          <lux_idx_end>0</lux_idx_end>
          <gain_start>1</gain_start>
          <gain_end>1</gain_end>
        </AECTrigger>
        <verticalMode type="int" range="[1,32]">1</verticalMode>
        <horizontalMode type="int" range="[1,8]">2</horizontalMode>
        <boxFilterLength type="int" range="[1,8]">0</boxFilterLength>
        <antiAliasFilterThreshold type="int" range="[80,120]">0</antiAliasFilterThreshold>
      </filterSet>
    </lcrFilterTrigger>
    <lcrBinningMode range="[0,2]">PDAF_LCR_BINNING_DEFAULT</lcrBinningMode>
    <lcrRawType range="[0,2]">PDAF_CAMIF_RAW</lcrRawType>
    <lcrMaxBinningNum type="int" range="[1,4]">1</lcrMaxBinningNum>
  </preProcess>
  <correlation>
    <minimumConfidenceLevel type="float" range="[50,200]">250</minimumConfidenceLevel>
    <defocusConfidenceThreshold type="float" range="[50,200]">250</defocusConfidenceThreshold>
    <PDRangeControl type="float" range="[0.02,0.10]">0.1</PDRangeControl>
    <searchRange>
      <from type="int" range="[-48,-16]">-48</from>
      <to type="int" range="[16,32]">16</to>
    </searchRange>
    <lcrSearchRange>
      <from type="int" range="[-48,-16]">-8</from>
      <to type="int" range="[16,32]">8</to>
    </lcrSearchRange>
  </correlation>
  <postProcess>
    <biasVectorStrength type="float" range="[0.0,0.4]">0.1</biasVectorStrength>
    <temporalFilterStaticWeight type="float" range="[0.0,1.0]">0.5</temporalFilterStaticWeight>
    <temporalFilterDynamicWeight type="float" range="[0.0,1.0]">1</temporalFilterDynamicWeight>
    <enableGridOverlap type="int" range="[0,1]">1</enableGridOverlap>
    <confIntegralWidth type="int" range="[24,32]">24</confIntegralWidth>
  </postProcess>
  <adaptiveK>
    <enable type="int">1</enable>
    <timeoutFrameCntThres type="int" range="[1,255]">20</timeoutFrameCntThres>
    <filterSize type="int" range="[1,9]">5</filterSize>
    <state0StableCntThres type="int" range="[1,255]">3</state0StableCntThres>
    <state1StableCntThres type="int" range="[1,255]">6</state1StableCntThres>
    <minimumLensPosDelta type="int" range="[1,400]">100</minimumLensPosDelta>
    <state0ConfThres type="int" range="[1,1024]">200</state0ConfThres>
    <state1ConfThres type="int" range="[1,1024]">450</state1ConfThres>
    <state0PhaseDiffThres type="float" range="[0,100]">6</state0PhaseDiffThres>
    <state1PhaseDiffThres type="float" range="[0,100]">1</state1PhaseDiffThres>
    <tolNearTargetUpperBound type="float" range="[0,100]">1.9</tolNearTargetUpperBound>
    <tolNearTargetLowerBound type="float" range="[0,100]">0.4</tolNearTargetLowerBound>
    <tolFarTargetUpperBound type="float" range="[0,100]">1.9</tolFarTargetUpperBound>
    <tolFarTargetLowerBound type="float" range="[0,100]">0.4</tolFarTargetLowerBound>
  </adaptiveK>
  <enablePeripheralWindows>0</enablePeripheralWindows>
  <singleWindowProcessingLevel>
    <processingMode>PD_PROCESSING_MODE_DYNAMIC</processingMode>
    <dynamicLevel type="int" range="[50,200]">100</dynamicLevel>
  </singleWindowProcessingLevel>
  <gridProcessingLevel>
    <processingMode>PD_PROCESSING_MODE_DYNAMIC</processingMode>
    <dynamicLevel type="int" range="[50,200]">100</dynamicLevel>
  </gridProcessingLevel>
  <PeripheralProcessing>
    <processingMode>PD_PROCESSING_MODE_DYNAMIC</processingMode>
    <dynamicLevel type="int" range="[50,200]">100</dynamicLevel>
  </PeripheralProcessing>
</chromatixPDLib>
